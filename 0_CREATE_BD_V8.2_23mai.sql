-- MySQL Script generated by MySQL Workbench
-- Wed May 23 16:39:21 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema db_rel_ent_pol_tours
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `db_rel_ent_pol_tours` ;

-- -----------------------------------------------------
-- Schema db_rel_ent_pol_tours
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `db_rel_ent_pol_tours` DEFAULT CHARACTER SET utf8 ;
USE `db_rel_ent_pol_tours` ;

-- -----------------------------------------------------
-- Table `db_rel_ent_pol_tours`.`pays`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_rel_ent_pol_tours`.`pays` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `code` INT(3) NULL,
  `alpha2` VARCHAR(2) NULL,
  `alpha3` VARCHAR(3) NULL,
  `nom_en_gb` VARCHAR(45) NULL,
  `nom_fr_fr` VARCHAR(45) NOT NULL DEFAULT 'Inconnu',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `code_UNIQUE` (`code` ASC),
  UNIQUE INDEX `alpha2_UNIQUE` (`alpha2` ASC),
  UNIQUE INDEX `alpha3_UNIQUE` (`alpha3` ASC))
ENGINE = InnoDB
COMMENT = 'Issu de http://sql.sh/514-liste-pays-csv-xml Licence CC - 241 pays conformes à la norme ISO 3166-1';


-- -----------------------------------------------------
-- Table `db_rel_ent_pol_tours`.`ville`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_rel_ent_pol_tours`.`ville` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_pays` INT NOT NULL,
  `nom_ville` VARCHAR(200) NOT NULL DEFAULT 'Inconnu',
  `departement` VARCHAR(3) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Ville_Pays1_idx` (`id_pays` ASC),
  CONSTRAINT `fk_Ville_Pays1`
    FOREIGN KEY (`id_pays`)
    REFERENCES `db_rel_ent_pol_tours`.`pays` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Issu de http://sql.sh/736-base-donnees-villes-francaises Licence CC';


-- -----------------------------------------------------
-- Table `db_rel_ent_pol_tours`.`adresse`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_rel_ent_pol_tours`.`adresse` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_ville` INT NOT NULL,
  `adresse` VARCHAR(255) NOT NULL DEFAULT 'Inconnue',
  `code_postal` VARCHAR(45) NOT NULL DEFAULT 'Inconnu',
  `complement_adresse` VARCHAR(255) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Adresse_Ville1_idx` (`id_ville` ASC),
  CONSTRAINT `fk_Adresse_Ville1`
    FOREIGN KEY (`id_ville`)
    REFERENCES `db_rel_ent_pol_tours`.`ville` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_rel_ent_pol_tours`.`personne`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_rel_ent_pol_tours`.`personne` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nom` VARCHAR(45) NOT NULL DEFAULT 'Nom',
  `prenom` VARCHAR(45) NOT NULL DEFAULT 'Prénom',
  `adresse_mail_perso` VARCHAR(100) NULL,
  `code_sexe` VARCHAR(1) NULL COMMENT 'M, F, etc.',
  `date_naissance` DATE NULL,
  `nationalite` VARCHAR(100) NULL,
  `id_adresse` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Personne_Adresse1_idx` (`id_adresse` ASC),
  CONSTRAINT `fk_Personne_Adresse1`
    FOREIGN KEY (`id_adresse`)
    REFERENCES `db_rel_ent_pol_tours`.`adresse` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_rel_ent_pol_tours`.`telephone`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_rel_ent_pol_tours`.`telephone` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `num_telephone` VARCHAR(45) NOT NULL DEFAULT '00 00 00 00 00',
  `type_telephone` VARCHAR(45) NOT NULL DEFAULT 'Fixe',
  `commentaire_telephone` VARCHAR(255) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `numTelephone_UNIQUE` (`num_telephone` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_rel_ent_pol_tours`.`possede_telephone`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_rel_ent_pol_tours`.`possede_telephone` (
  `id_personne` INT NOT NULL,
  `id_telephone` INT NOT NULL,
  PRIMARY KEY (`id_personne`, `id_telephone`),
  INDEX `fk_PossedeTelephone_Telephone1_idx` (`id_telephone` ASC),
  CONSTRAINT `fk_PossedeTelephone_Personne`
    FOREIGN KEY (`id_personne`)
    REFERENCES `db_rel_ent_pol_tours`.`personne` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PossedeTelephone_Telephone1`
    FOREIGN KEY (`id_telephone`)
    REFERENCES `db_rel_ent_pol_tours`.`telephone` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_rel_ent_pol_tours`.`startup`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_rel_ent_pol_tours`.`startup` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nom_startup` VARCHAR(100) NOT NULL DEFAULT 'Inconnu',
  `date_creation_startup` DATE NOT NULL DEFAULT '1900-01-01',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_rel_ent_pol_tours`.`departement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_rel_ent_pol_tours`.`departement` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `libelle_departement` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `libelleDepartement_UNIQUE` (`libelle_departement` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_rel_ent_pol_tours`.`specialite`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_rel_ent_pol_tours`.`specialite` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_departement` INT NOT NULL,
  `libelle_specialite` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `libelleSpecialite_UNIQUE` (`libelle_specialite` ASC),
  INDEX `fk_Specialite_Departement1_idx` (`id_departement` ASC),
  CONSTRAINT `fk_Specialite_Departement1`
    FOREIGN KEY (`id_departement`)
    REFERENCES `db_rel_ent_pol_tours`.`departement` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_rel_ent_pol_tours`.`etudiant`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_rel_ent_pol_tours`.`etudiant` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_personne` INT NOT NULL,
  `id_specialite` INT NOT NULL,
  `annee_etude` INT NOT NULL DEFAULT 1,
  `diplome` TINYINT NOT NULL DEFAULT 0 COMMENT '1 si diplomé, 0 autrement',
  `numero_etudiant` INT NULL,
  `mail_etudiant` VARCHAR(100) NULL,
  `date_diplomation` DATE NULL,
  `id_startup` INT NULL,
  PRIMARY KEY (`id`, `id_personne`),
  UNIQUE INDEX `numeroEtudiant_UNIQUE` (`numero_etudiant` ASC),
  INDEX `fk_Etudiant_Startup1_idx` (`id_startup` ASC),
  INDEX `fk_Etudiant_Personne1_idx` (`id_personne` ASC),
  INDEX `fk_Etudiant_Specialite1_idx` (`id_specialite` ASC),
  CONSTRAINT `fk_Etudiant_Startup1`
    FOREIGN KEY (`id_startup`)
    REFERENCES `db_rel_ent_pol_tours`.`startup` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Etudiant_Personne1`
    FOREIGN KEY (`id_personne`)
    REFERENCES `db_rel_ent_pol_tours`.`personne` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Etudiant_Specialite1`
    FOREIGN KEY (`id_specialite`)
    REFERENCES `db_rel_ent_pol_tours`.`specialite` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_rel_ent_pol_tours`.`personnel_polytech`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_rel_ent_pol_tours`.`personnel_polytech` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_personne` INT NOT NULL,
  `id_departement` INT NOT NULL,
  `fonction` VARCHAR(255) NOT NULL DEFAULT 'Personnel Polytech',
  `mail_universitaire` VARCHAR(100) NULL,
  PRIMARY KEY (`id`, `id_personne`),
  INDEX `fk_PersonnelPolytech_Personne1_idx` (`id_personne` ASC),
  INDEX `fk_PersonnelPolytech_Departement1_idx` (`id_departement` ASC),
  CONSTRAINT `fk_PersonnelPolytech_Personne1`
    FOREIGN KEY (`id_personne`)
    REFERENCES `db_rel_ent_pol_tours`.`personne` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PersonnelPolytech_Departement1`
    FOREIGN KEY (`id_departement`)
    REFERENCES `db_rel_ent_pol_tours`.`departement` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_rel_ent_pol_tours`.`contact_etablissement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_rel_ent_pol_tours`.`contact_etablissement` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_personne` INT NOT NULL,
  `mail_professionnel` VARCHAR(100) NULL,
  `fax` VARCHAR(45) NULL,
  PRIMARY KEY (`id`, `id_personne`),
  INDEX `fk_ContactEtablissement_Personne1_idx` (`id_personne` ASC),
  CONSTRAINT `fk_ContactEtablissement_Personne1`
    FOREIGN KEY (`id_personne`)
    REFERENCES `db_rel_ent_pol_tours`.`personne` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_rel_ent_pol_tours`.`entreprise`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_rel_ent_pol_tours`.`entreprise` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nom_entreprise` VARCHAR(255) NOT NULL DEFAULT 'Inconnu',
  `statut_juridique` VARCHAR(255) NULL DEFAULT 'Inconnu',
  `num_siren` VARCHAR(9) NULL,
  `site_web_entreprise` VARCHAR(255) NULL,
  `commentaire_entreprise` TEXT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_rel_ent_pol_tours`.`etablissement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_rel_ent_pol_tours`.`etablissement` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_entreprise` INT NOT NULL,
  `id_adresse` INT NULL,
  `nom_etablissement` VARCHAR(255) NOT NULL DEFAULT 'Inconnu',
  `num_siret` VARCHAR(14) NULL,
  `type_structure` VARCHAR(255) NULL,
  `effectifs` VARCHAR(45) NULL,
  `secteurs_activites` VARCHAR(255) NULL,
  `code_naf` VARCHAR(45) NULL,
  `site_web_etablissement` VARCHAR(255) NULL,
  `commentaire_etablissement` TEXT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `siret_UNIQUE` (`num_siret` ASC),
  INDEX `fk_Etablissement_Adresse1_idx` (`id_adresse` ASC),
  INDEX `fk_Etablissement_Entreprise1_idx` (`id_entreprise` ASC),
  CONSTRAINT `fk_Etablissement_Adresse1`
    FOREIGN KEY (`id_adresse`)
    REFERENCES `db_rel_ent_pol_tours`.`adresse` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Etablissement_Entreprise1`
    FOREIGN KEY (`id_entreprise`)
    REFERENCES `db_rel_ent_pol_tours`.`entreprise` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_rel_ent_pol_tours`.`stage`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_rel_ent_pol_tours`.`stage` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `date_debut_stage` DATE NOT NULL DEFAULT '1900-01-01',
  `date_fin_stage` DATE NOT NULL DEFAULT '1900-01-01',
  `etranger` TINYINT NOT NULL DEFAULT 0,
  `annee_etude_stage` INT NULL,
  `thematique_stage` VARCHAR(255) NULL,
  `sujet_stage` TEXT NULL,
  `fonctions_taches_stage` TEXT NULL,
  `details_projet_stage` TEXT NULL,
  `duree_stage_semaines` INT NULL,
  `duree_stage_heures` INT NULL,
  `nb_jours_travail` INT NULL,
  `commentaire_duree_stage` VARCHAR(255) NULL,
  `commentaire_stage` TEXT NULL,
  `element_pedagogique` VARCHAR(255) NULL,
  `avantages_nature` VARCHAR(255) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_rel_ent_pol_tours`.`gratification`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_rel_ent_pol_tours`.`gratification` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `montant_gratification` FLOAT NOT NULL DEFAULT 0.0,
  `unite_gratification` VARCHAR(45) NOT NULL DEFAULT 'Brut' COMMENT 'BRUT / NET',
  `unite_duree_gratification` VARCHAR(45) NOT NULL DEFAULT 'Mensuel' COMMENT 'HEURE, MOIS, etc.',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_rel_ent_pol_tours`.`service_accueil`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_rel_ent_pol_tours`.`service_accueil` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_etablissement` INT NOT NULL,
  `nom_service` VARCHAR(100) NOT NULL DEFAULT 'Service d''accueil',
  PRIMARY KEY (`id`),
  INDEX `fk_ServiceAccueil_Etablissement1_idx` (`id_etablissement` ASC),
  CONSTRAINT `fk_ServiceAccueil_Etablissement1`
    FOREIGN KEY (`id_etablissement`)
    REFERENCES `db_rel_ent_pol_tours`.`etablissement` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_rel_ent_pol_tours`.`convention_stage`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_rel_ent_pol_tours`.`convention_stage` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `numero_convention` INT(11) NULL,
  `id_stage` INT NOT NULL,
  `id_etablissement` INT NOT NULL,
  `id_specialite` INT NOT NULL,
  `id_etudiant` INT NULL,
  `id_personne_etudiant` INT NULL,
  `id_personnel_polytech_tuteur` INT NULL,
  `id_personne_personnel_polytech_tuteur` INT NULL,
  `id_personnel_polytech_charge_suivi` INT NULL,
  `id_personne_personnel_polytech_charge_suivi` INT NULL,
  `id_contact_etablissement_tuteur` INT NULL,
  `id_personne_contact_etablissement_tuteur` INT NULL,
  `id_contact_etablissement_signataire` INT NULL,
  `id_personne_contact_etablissement_signataire` INT NULL,
  `id_gratification` INT NULL,
  `id_service_accueil` INT NULL,
  `date_creation` DATE NOT NULL DEFAULT '1900-01-01',
  `date_derniere_modification` DATE NOT NULL DEFAULT '1900-01-01',
  `validee` TINYINT NOT NULL DEFAULT 1,
  `validee_pedagogiquement` TINYINT NOT NULL DEFAULT 1,
  `type_convention` VARCHAR(45) NULL COMMENT 'Obligatoire, non obligatoire, ...',
  PRIMARY KEY (`id`),
  INDEX `fk_ConventionStage_Stage1_idx` (`id_stage` ASC),
  INDEX `fk_ConventionStage_Gratification1_idx` (`id_gratification` ASC),
  INDEX `fk_ConventionStage_Etudiant1_idx` (`id_etudiant` ASC, `id_personne_etudiant` ASC),
  INDEX `fk_ConventionStage_Specialite1_idx` (`id_specialite` ASC),
  INDEX `fk_ConventionStage_PersonnelPolytech1_idx` (`id_personnel_polytech_tuteur` ASC, `id_personne_personnel_polytech_tuteur` ASC),
  INDEX `fk_ConventionStage_PersonnelPolytech2_idx` (`id_personnel_polytech_charge_suivi` ASC, `id_personne_personnel_polytech_charge_suivi` ASC),
  INDEX `fk_ConventionStage_ContactEtablissement1_idx` (`id_contact_etablissement_tuteur` ASC, `id_personne_contact_etablissement_tuteur` ASC),
  INDEX `fk_ConventionStage_ContactEtablissement2_idx` (`id_contact_etablissement_signataire` ASC, `id_personne_contact_etablissement_signataire` ASC),
  INDEX `fk_ConventionStage_Etablissement1_idx` (`id_etablissement` ASC),
  INDEX `fk_ConventionStage_ServiceAccueil1_idx` (`id_service_accueil` ASC),
  UNIQUE INDEX `numero_convention_UNIQUE` (`numero_convention` ASC),
  CONSTRAINT `fk_ConventionStage_Stage1`
    FOREIGN KEY (`id_stage`)
    REFERENCES `db_rel_ent_pol_tours`.`stage` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ConventionStage_Gratification1`
    FOREIGN KEY (`id_gratification`)
    REFERENCES `db_rel_ent_pol_tours`.`gratification` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ConventionStage_Etudiant1`
    FOREIGN KEY (`id_etudiant` , `id_personne_etudiant`)
    REFERENCES `db_rel_ent_pol_tours`.`etudiant` (`id` , `id_personne`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ConventionStage_Specialite1`
    FOREIGN KEY (`id_specialite`)
    REFERENCES `db_rel_ent_pol_tours`.`specialite` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ConventionStage_PersonnelPolytech1`
    FOREIGN KEY (`id_personnel_polytech_tuteur` , `id_personne_personnel_polytech_tuteur`)
    REFERENCES `db_rel_ent_pol_tours`.`personnel_polytech` (`id` , `id_personne`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ConventionStage_PersonnelPolytech2`
    FOREIGN KEY (`id_personnel_polytech_charge_suivi` , `id_personne_personnel_polytech_charge_suivi`)
    REFERENCES `db_rel_ent_pol_tours`.`personnel_polytech` (`id` , `id_personne`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ConventionStage_ContactEtablissement1`
    FOREIGN KEY (`id_contact_etablissement_tuteur` , `id_personne_contact_etablissement_tuteur`)
    REFERENCES `db_rel_ent_pol_tours`.`contact_etablissement` (`id` , `id_personne`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ConventionStage_ContactEtablissement2`
    FOREIGN KEY (`id_contact_etablissement_signataire` , `id_personne_contact_etablissement_signataire`)
    REFERENCES `db_rel_ent_pol_tours`.`contact_etablissement` (`id` , `id_personne`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ConventionStage_Etablissement1`
    FOREIGN KEY (`id_etablissement`)
    REFERENCES `db_rel_ent_pol_tours`.`etablissement` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ConventionStage_ServiceAccueil1`
    FOREIGN KEY (`id_service_accueil`)
    REFERENCES `db_rel_ent_pol_tours`.`service_accueil` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_rel_ent_pol_tours`.`interruption_stage`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_rel_ent_pol_tours`.`interruption_stage` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_convention_stage` INT NOT NULL,
  `date_debut_interruption` DATE NOT NULL DEFAULT '1900-01-01',
  `date_fin_interruption` DATE NOT NULL DEFAULT '1900-01-01',
  `commentaire_interruption` VARCHAR(255) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_InterruptionStage_ConventionStage1_idx` (`id_convention_stage` ASC),
  CONSTRAINT `fk_InterruptionStage_ConventionStage1`
    FOREIGN KEY (`id_convention_stage`)
    REFERENCES `db_rel_ent_pol_tours`.`convention_stage` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_rel_ent_pol_tours`.`avenant`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_rel_ent_pol_tours`.`avenant` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_convention_stage` INT NOT NULL,
  `date_creation_avenant` DATE NOT NULL DEFAULT '1900-01-01',
  `objet_avenant` VARCHAR(45) NOT NULL DEFAULT 'Inconnu',
  `details_avenant` TEXT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Avenant_ConventionStage1_idx` (`id_convention_stage` ASC),
  CONSTRAINT `fk_Avenant_ConventionStage1`
    FOREIGN KEY (`id_convention_stage`)
    REFERENCES `db_rel_ent_pol_tours`.`convention_stage` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_rel_ent_pol_tours`.`apprentissage`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_rel_ent_pol_tours`.`apprentissage` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_etablissement` INT NOT NULL,
  `id_specialite` INT NOT NULL,
  `id_personne_etudiant` INT NULL,
  `id_etudiant` INT NULL,
  `id_gratification` INT NULL,
  `etranger` TINYINT NOT NULL DEFAULT 0,
  `duree_apprentissage_annees` INT NOT NULL DEFAULT 3 COMMENT '1 an, 3 ans, etc.',
  `date_debut_apprentissage` DATE NOT NULL DEFAULT '1900-01-01',
  `date_fin_apprentissage` DATE NOT NULL DEFAULT '1903-01-01',
  `details_apprentissage` TEXT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Apprentissage_Gratification1_idx` (`id_gratification` ASC),
  INDEX `fk_Apprentissage_Specialite1_idx` (`id_specialite` ASC),
  INDEX `fk_Apprentissage_Etudiant1_idx` (`id_personne_etudiant` ASC, `id_etudiant` ASC),
  INDEX `fk_Apprentissage_Etablissement1_idx` (`id_etablissement` ASC),
  CONSTRAINT `fk_Apprentissage_Gratification1`
    FOREIGN KEY (`id_gratification`)
    REFERENCES `db_rel_ent_pol_tours`.`gratification` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Apprentissage_Specialite1`
    FOREIGN KEY (`id_specialite`)
    REFERENCES `db_rel_ent_pol_tours`.`specialite` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Apprentissage_Etudiant1`
    FOREIGN KEY (`id_personne_etudiant` , `id_etudiant`)
    REFERENCES `db_rel_ent_pol_tours`.`etudiant` (`id_personne` , `id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Apprentissage_Etablissement1`
    FOREIGN KEY (`id_etablissement`)
    REFERENCES `db_rel_ent_pol_tours`.`etablissement` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_rel_ent_pol_tours`.`est_employe`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_rel_ent_pol_tours`.`est_employe` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_contact_etablissement` INT NOT NULL,
  `id_personne_contact_etablissement` INT NOT NULL,
  `id_etablissement` INT NOT NULL,
  `fonction` VARCHAR(255) NOT NULL DEFAULT 'Employé(e)',
  `date_debut_emploi` DATE NOT NULL DEFAULT '1900-01-01',
  `date_fin_emploi` DATE NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Employe_ContactEtablissement1_idx` (`id_contact_etablissement` ASC, `id_personne_contact_etablissement` ASC),
  INDEX `fk_Employe_Etablissement1_idx` (`id_etablissement` ASC),
  CONSTRAINT `fk_Employe_ContactEtablissement1`
    FOREIGN KEY (`id_contact_etablissement` , `id_personne_contact_etablissement`)
    REFERENCES `db_rel_ent_pol_tours`.`contact_etablissement` (`id` , `id_personne`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Employe_Etablissement1`
    FOREIGN KEY (`id_etablissement`)
    REFERENCES `db_rel_ent_pol_tours`.`etablissement` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_rel_ent_pol_tours`.`effectue_vacation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_rel_ent_pol_tours`.`effectue_vacation` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_etablissement` INT NOT NULL,
  `id_contact_etablissement` INT NULL,
  `id_personne_contact_etablissement` INT NULL,
  `date_debut_vacation` DATE NOT NULL DEFAULT '1900-01-01',
  `date_fin_vacation` DATE NULL,
  `volume_horaire` INT NULL,
  `commentaire_vacation` VARCHAR(255) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_EffectueVacation_ContactEtablissement1_idx` (`id_contact_etablissement` ASC, `id_personne_contact_etablissement` ASC),
  INDEX `fk_EffectueVacation_Etablissement1_idx` (`id_etablissement` ASC),
  CONSTRAINT `fk_EffectueVacation_ContactEtablissement1`
    FOREIGN KEY (`id_contact_etablissement` , `id_personne_contact_etablissement`)
    REFERENCES `db_rel_ent_pol_tours`.`contact_etablissement` (`id` , `id_personne`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_EffectueVacation_Etablissement1`
    FOREIGN KEY (`id_etablissement`)
    REFERENCES `db_rel_ent_pol_tours`.`etablissement` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_rel_ent_pol_tours`.`est_contact_rh`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_rel_ent_pol_tours`.`est_contact_rh` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_contact_etablissement` INT NOT NULL,
  `id_personne_contact_etablissement` INT NOT NULL,
  `id_etablissement` INT NOT NULL,
  `date_debut_contact_rh` DATE NOT NULL DEFAULT '1900-01-01',
  `date_fin_contact_rh` DATE NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_EstContactRH_ContactEtablissement1_idx` (`id_contact_etablissement` ASC, `id_personne_contact_etablissement` ASC),
  INDEX `fk_EstContactRH_Etablissement1_idx` (`id_etablissement` ASC),
  CONSTRAINT `fk_EstContactRH_ContactEtablissement1`
    FOREIGN KEY (`id_contact_etablissement` , `id_personne_contact_etablissement`)
    REFERENCES `db_rel_ent_pol_tours`.`contact_etablissement` (`id` , `id_personne`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_EstContactRH_Etablissement1`
    FOREIGN KEY (`id_etablissement`)
    REFERENCES `db_rel_ent_pol_tours`.`etablissement` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_rel_ent_pol_tours`.`est_contact_technique`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_rel_ent_pol_tours`.`est_contact_technique` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_contact_etablissement` INT NOT NULL,
  `id_personne_contact_etablissement` INT NOT NULL,
  `id_etablissement` INT NOT NULL,
  `date_debut_contact_technique` DATE NOT NULL DEFAULT '1900-01-01',
  `date_fin_contact_technique` DATE NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_EstContactTechnique_ContactEtablissement1_idx` (`id_contact_etablissement` ASC, `id_personne_contact_etablissement` ASC),
  INDEX `fk_EstContactTechnique_Etablissement1_idx` (`id_etablissement` ASC),
  CONSTRAINT `fk_EstContactTechnique_ContactEtablissement1`
    FOREIGN KEY (`id_contact_etablissement` , `id_personne_contact_etablissement`)
    REFERENCES `db_rel_ent_pol_tours`.`contact_etablissement` (`id` , `id_personne`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_EstContactTechnique_Etablissement1`
    FOREIGN KEY (`id_etablissement`)
    REFERENCES `db_rel_ent_pol_tours`.`etablissement` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_rel_ent_pol_tours`.`type_forum`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_rel_ent_pol_tours`.`type_forum` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `libelle_type_forum` VARCHAR(45) NOT NULL DEFAULT 'Type inconnu',
  `commentaire_type_forum` VARCHAR(255) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'Type de forum : forum des entreprises, salon étudiant, etc.';


-- -----------------------------------------------------
-- Table `db_rel_ent_pol_tours`.`forum`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_rel_ent_pol_tours`.`forum` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_type_forum` INT NOT NULL,
  `nom_forum` VARCHAR(45) NOT NULL DEFAULT 'Inconnu',
  `date_debut_forum` DATETIME NOT NULL DEFAULT '1900-01-01',
  `date_fin_forum` DATETIME NULL,
  `commentaire_forum` VARCHAR(255) NULL,
  `id_adresse` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Forum_TypeForum1_idx` (`id_type_forum` ASC),
  INDEX `fk_Forum_Adresse1_idx` (`id_adresse` ASC),
  CONSTRAINT `fk_Forum_TypeForum1`
    FOREIGN KEY (`id_type_forum`)
    REFERENCES `db_rel_ent_pol_tours`.`type_forum` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Forum_Adresse1`
    FOREIGN KEY (`id_adresse`)
    REFERENCES `db_rel_ent_pol_tours`.`adresse` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_rel_ent_pol_tours`.`participation_forum`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_rel_ent_pol_tours`.`participation_forum` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_forum` INT NOT NULL,
  `id_etablissement` INT NOT NULL COMMENT 'Etablissement représenté par le contact',
  `id_contact_etablissement` INT NULL,
  `id_personne_contact_etablissement` INT NULL,
  `recrute_stagiaire` VARCHAR(255) NULL,
  `recrute_diplome` VARCHAR(255) NULL,
  `recrute_apprentis` VARCHAR(255) NULL,
  `niveaux_etudes_recherches` VARCHAR(255) NULL,
  `filieres_recherchees` VARCHAR(255) NULL,
  `commentaire_participation` VARCHAR(255) NULL,
  INDEX `fk_ParticipeForum_Forum1_idx` (`id_forum` ASC),
  PRIMARY KEY (`id`),
  INDEX `fk_ParticipationForum_Etablissement1_idx` (`id_etablissement` ASC),
  CONSTRAINT `fk_ParticipeForum_ContactEtablissement1`
    FOREIGN KEY (`id_contact_etablissement` , `id_personne_contact_etablissement`)
    REFERENCES `db_rel_ent_pol_tours`.`contact_etablissement` (`id` , `id_personne`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ParticipeForum_Forum1`
    FOREIGN KEY (`id_forum`)
    REFERENCES `db_rel_ent_pol_tours`.`forum` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ParticipationForum_Etablissement1`
    FOREIGN KEY (`id_etablissement`)
    REFERENCES `db_rel_ent_pol_tours`.`etablissement` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_rel_ent_pol_tours`.`conference`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_rel_ent_pol_tours`.`conference` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_etablissement` INT NOT NULL,
  `sujet_conference` VARCHAR(255) NOT NULL DEFAULT 'Inconnu',
  `annulee` TINYINT NOT NULL DEFAULT 0,
  `date_conference` DATE NULL,
  `heure_debut_conference` TIME NULL,
  `heure_fin_conference` TIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Conference_Etablissement1_idx` (`id_etablissement` ASC),
  CONSTRAINT `fk_Conference_Etablissement1`
    FOREIGN KEY (`id_etablissement`)
    REFERENCES `db_rel_ent_pol_tours`.`etablissement` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_rel_ent_pol_tours`.`participe_conference`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_rel_ent_pol_tours`.`participe_conference` (
  `id_conference` INT NOT NULL,
  `id_contact_etablissement` INT NOT NULL,
  `id_personne_contact_etablissement` INT NOT NULL,
  PRIMARY KEY (`id_conference`, `id_contact_etablissement`, `id_personne_contact_etablissement`),
  INDEX `fk_ParticipeConference_ContactEtablissement1_idx` (`id_contact_etablissement` ASC, `id_personne_contact_etablissement` ASC),
  CONSTRAINT `fk_ParticipeConference_Conference1`
    FOREIGN KEY (`id_conference`)
    REFERENCES `db_rel_ent_pol_tours`.`conference` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ParticipeConference_ContactEtablissement1`
    FOREIGN KEY (`id_contact_etablissement` , `id_personne_contact_etablissement`)
    REFERENCES `db_rel_ent_pol_tours`.`contact_etablissement` (`id` , `id_personne`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_rel_ent_pol_tours`.`projet_pedagogique`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_rel_ent_pol_tours`.`projet_pedagogique` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_etablissement` INT NOT NULL,
  `date_debut_projet` DATE NOT NULL DEFAULT '1900-01-01',
  `intitule_projet` VARCHAR(255) NOT NULL DEFAULT 'Projet pédagogique',
  `details_projet` TEXT NULL,
  `montant_alloue` FLOAT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_ProjetPedagogique_Etablissement1_idx` (`id_etablissement` ASC),
  CONSTRAINT `fk_ProjetPedagogique_Etablissement1`
    FOREIGN KEY (`id_etablissement`)
    REFERENCES `db_rel_ent_pol_tours`.`etablissement` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_rel_ent_pol_tours`.`verse_taxe_apprentissage`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_rel_ent_pol_tours`.`verse_taxe_apprentissage` (
  `id_departement` INT NOT NULL,
  `id_entreprise` INT NOT NULL,
  `annee_versement` INT NOT NULL,
  `partie_versante` VARCHAR(255) NOT NULL,
  `montant_taxe` FLOAT NOT NULL DEFAULT 0.0,
  PRIMARY KEY (`id_departement`, `id_entreprise`, `annee_versement`, `partie_versante`),
  INDEX `fk_verse_taxe_apprentissage_entreprise1_idx` (`id_entreprise` ASC),
  CONSTRAINT `fk_VerseTaxeApprentissage_Departement1`
    FOREIGN KEY (`id_departement`)
    REFERENCES `db_rel_ent_pol_tours`.`departement` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_verse_taxe_apprentissage_entreprise1`
    FOREIGN KEY (`id_entreprise`)
    REFERENCES `db_rel_ent_pol_tours`.`entreprise` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_rel_ent_pol_tours`.`cifre`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_rel_ent_pol_tours`.`cifre` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_etablissement` INT NOT NULL,
  `id_personne_etudiant` INT NULL,
  `id_etudiant` INT NULL,
  `id_personne_personnel_polytech` INT NULL,
  `id_personnel_polytech` INT NULL,
  `intitule_cifre` VARCHAR(255) NOT NULL DEFAULT 'Inconnu',
  `soutenue` TINYINT NOT NULL DEFAULT 1,
  `date_debut_cifre` DATE NOT NULL DEFAULT '1900-01-01',
  `date_fin_cifre` DATE NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_CIFRE_Etudiant1_idx` (`id_personne_etudiant` ASC, `id_etudiant` ASC),
  INDEX `fk_CIFRE_Etablissement1_idx` (`id_etablissement` ASC),
  INDEX `fk_CIFRE_PersonnelPolytech1_idx` (`id_personne_personnel_polytech` ASC, `id_personnel_polytech` ASC),
  CONSTRAINT `fk_CIFRE_Etudiant1`
    FOREIGN KEY (`id_personne_etudiant` , `id_etudiant`)
    REFERENCES `db_rel_ent_pol_tours`.`etudiant` (`id_personne` , `id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_CIFRE_Etablissement1`
    FOREIGN KEY (`id_etablissement`)
    REFERENCES `db_rel_ent_pol_tours`.`etablissement` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_CIFRE_PersonnelPolytech1`
    FOREIGN KEY (`id_personne_personnel_polytech` , `id_personnel_polytech`)
    REFERENCES `db_rel_ent_pol_tours`.`personnel_polytech` (`id_personne` , `id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_rel_ent_pol_tours`.`conseil_perfectionnement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_rel_ent_pol_tours`.`conseil_perfectionnement` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `date_conseil_perfectionnement` DATE NOT NULL DEFAULT '1900-01-01',
  `id_departement` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_ConseilPerfectionnement_Departement1_idx` (`id_departement` ASC),
  CONSTRAINT `fk_ConseilPerfectionnement_Departement1`
    FOREIGN KEY (`id_departement`)
    REFERENCES `db_rel_ent_pol_tours`.`departement` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_rel_ent_pol_tours`.`etudiant_participe_conseil`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_rel_ent_pol_tours`.`etudiant_participe_conseil` (
  `id_conseil_perfectionnement` INT NOT NULL,
  `id_etudiant` INT NOT NULL,
  `id_personne_etudiant` INT NOT NULL,
  PRIMARY KEY (`id_conseil_perfectionnement`, `id_etudiant`, `id_personne_etudiant`),
  INDEX `fk_EtudiantParticipeConseil_Etudiant1_idx` (`id_personne_etudiant` ASC, `id_etudiant` ASC),
  CONSTRAINT `fk_EtudiantParticipeConseil_ConseilPerfectionnement1`
    FOREIGN KEY (`id_conseil_perfectionnement`)
    REFERENCES `db_rel_ent_pol_tours`.`conseil_perfectionnement` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_EtudiantParticipeConseil_Etudiant1`
    FOREIGN KEY (`id_personne_etudiant` , `id_etudiant`)
    REFERENCES `db_rel_ent_pol_tours`.`etudiant` (`id_personne` , `id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_rel_ent_pol_tours`.`personnel_participe_conseil`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_rel_ent_pol_tours`.`personnel_participe_conseil` (
  `id_conseil_perfectionnement` INT NOT NULL,
  `id_personnel_polytech` INT NOT NULL,
  `id_personne_personnel_polytech` INT NOT NULL,
  PRIMARY KEY (`id_conseil_perfectionnement`, `id_personnel_polytech`, `id_personne_personnel_polytech`),
  INDEX `fk_PersonnelParticipeConseil_PersonnelPolytech1_idx` (`id_personne_personnel_polytech` ASC, `id_personnel_polytech` ASC),
  CONSTRAINT `fk_PersonnelParticipeConseil_ConseilPerfectionnement1`
    FOREIGN KEY (`id_conseil_perfectionnement`)
    REFERENCES `db_rel_ent_pol_tours`.`conseil_perfectionnement` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PersonnelParticipeConseil_PersonnelPolytech1`
    FOREIGN KEY (`id_personne_personnel_polytech` , `id_personnel_polytech`)
    REFERENCES `db_rel_ent_pol_tours`.`personnel_polytech` (`id_personne` , `id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_rel_ent_pol_tours`.`contact_participe_conseil`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_rel_ent_pol_tours`.`contact_participe_conseil` (
  `id_conseil_perfectionnement` INT NOT NULL,
  `id_personne_contact_etablissement` INT NOT NULL,
  `id_contact_etablissement` INT NOT NULL,
  PRIMARY KEY (`id_conseil_perfectionnement`, `id_personne_contact_etablissement`, `id_contact_etablissement`),
  INDEX `fk_ContactParticipeConseil_ContactEtablissement1_idx` (`id_personne_contact_etablissement` ASC, `id_contact_etablissement` ASC),
  CONSTRAINT `fk_ContactParticipeConseil_ConseilPerfectionnement1`
    FOREIGN KEY (`id_conseil_perfectionnement`)
    REFERENCES `db_rel_ent_pol_tours`.`conseil_perfectionnement` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ContactParticipeConseil_ContactEtablissement1`
    FOREIGN KEY (`id_personne_contact_etablissement` , `id_contact_etablissement`)
    REFERENCES `db_rel_ent_pol_tours`.`contact_etablissement` (`id_personne` , `id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_rel_ent_pol_tours`.`rencontre_contact`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_rel_ent_pol_tours`.`rencontre_contact` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_adresse` INT NOT NULL,
  `id_contact_etablissement` INT NOT NULL,
  `id_personne_contact_etablissement` INT NOT NULL,
  `id_personnel_polytech` INT NULL,
  `id_personne_personnel_polytech` INT NULL,
  `date_rencontre` DATE NOT NULL DEFAULT '1900-01-01',
  `date_rdv_telephonique` DATE NULL,
  `sujet` VARCHAR(255) NULL,
  `suite` VARCHAR(255) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Rencontre_Adresse1_idx` (`id_adresse` ASC),
  INDEX `fk_Rencontre_ContactEtablissement1_idx` (`id_contact_etablissement` ASC, `id_personne_contact_etablissement` ASC),
  INDEX `fk_Rencontre_PersonnelPolytech1_idx` (`id_personnel_polytech` ASC, `id_personne_personnel_polytech` ASC),
  CONSTRAINT `fk_Rencontre_Adresse1`
    FOREIGN KEY (`id_adresse`)
    REFERENCES `db_rel_ent_pol_tours`.`adresse` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Rencontre_ContactEtablissement1`
    FOREIGN KEY (`id_contact_etablissement` , `id_personne_contact_etablissement`)
    REFERENCES `db_rel_ent_pol_tours`.`contact_etablissement` (`id` , `id_personne`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Rencontre_PersonnelPolytech1`
    FOREIGN KEY (`id_personnel_polytech` , `id_personne_personnel_polytech`)
    REFERENCES `db_rel_ent_pol_tours`.`personnel_polytech` (`id` , `id_personne`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `db_rel_ent_pol_tours` ;

-- -----------------------------------------------------
-- procedure get_oldest_internship_year
-- -----------------------------------------------------

DELIMITER $$
USE `db_rel_ent_pol_tours`$$
CREATE PROCEDURE `get_oldest_internship_year` (OUT po_year YEAR)
BEGIN
	-- ------------------------------------------------------------------------------
	-- 	Gets the year of the oldest internship of the database
	-- 	OUTPUT
	-- 		po_year [YEAR]	: year of the oldest internship in the database
	-- ------------------------------------------------------------------------------
    
	SELECT YEAR(MIN(date_debut_stage)) INTO po_year
    FROM stage;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure get_oldest_apprenticeship_year
-- -----------------------------------------------------

DELIMITER $$
USE `db_rel_ent_pol_tours`$$
CREATE PROCEDURE `get_oldest_apprenticeship_year` (OUT po_year YEAR)
BEGIN
	-- ------------------------------------------------------------------------------
	-- 	Gets the year of the oldest apprenticeship of the database
	-- 	OUTPUT
	-- 		po_year [YEAR]	: year of the oldest apprenticeship in the database
	-- ------------------------------------------------------------------------------
    
	SELECT YEAR(MIN(date_debut_apprentissage)) INTO po_year
    FROM apprentissage;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure get_oldest_forum_year
-- -----------------------------------------------------

DELIMITER $$
USE `db_rel_ent_pol_tours`$$
CREATE PROCEDURE `get_oldest_forum_year` (IN pi_forum_type VARCHAR(45), OUT po_year YEAR)
BEGIN
	-- ------------------------------------------------------------------------------
	-- 	Gets the year of the oldest forum of the specified type in the database
	-- 	INPUT
	-- 		pi_forum_type [VARCHAR(45)]	: name of the forum type
	-- 	OUTPUT
	-- 		po_year [YEAR]	: year of the oldest forum of the
	-- 				specified typein the database
	-- ------------------------------------------------------------------------------
    
	SELECT YEAR(f.date_debut_forum) INTO po_year
    FROM forum f, type_forum t
    WHERE f.id_type_forum = t.id
		AND t.libelle_type_forum = pi_forum_type;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure display_apprenticeship_stats_total
-- -----------------------------------------------------

DELIMITER $$
USE `db_rel_ent_pol_tours`$$
CREATE PROCEDURE `display_apprenticeship_stats_total` (OUT po_total INT)
BEGIN
	-- ------------------------------------------------------------------------------ 
	-- Displays the total number of apprenticeships in the database
	-- OUTPUT
	-- 		po_total [INT]	: total number of apprenticeships in the database
	-- ------------------------------------------------------------------------------ 
	SELECT COUNT(id) INTO po_total
	FROM apprentissage;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure display_apprenticeship_stats_current_year
-- -----------------------------------------------------

DELIMITER $$
USE `db_rel_ent_pol_tours`$$
CREATE PROCEDURE `display_apprenticeship_stats_current_year` (
	IN pi_date DATE, OUT po_total INT, OUT po_ongoing INT, OUT po_finished INT, OUT po_tocome INT)
BEGIN
	-- ------------------------------------------------------------------------------ 
	-- Displays apprenticeship stats for the current year on a specified date
	-- INPUT
	-- 		pi_date [DATE] 		: current date, i.e. '2018-04-16'
	-- OUTPUTS
	-- 		po_total [INT] 		: number of apprenticeships related to the current year
	-- 		po_ongoing [INT]	: number of apprenticeships currently ongoing
	-- 		po_finished [INT]	: number of apprenticeships finished this year before pi_date
	-- 		po_tocome [INT]		: number of apprenticeships to come this year after pi_date
	-- ------------------------------------------------------------------------------ 
	DECLARE v_total INT;
    SET v_total = 0;    
    
	-- Ongoing for current year
    SELECT COUNT(id) INTO po_ongoing
    FROM apprentissage
    WHERE pi_date BETWEEN date_debut_apprentissage AND date_fin_apprentissage;
    SET v_total = v_total + po_ongoing;
    
    -- Finished in the current year before the date
    SELECT COUNT(id) INTO po_finished
    FROM apprentissage
    WHERE date_fin_apprentissage < pi_date AND YEAR(date_fin_apprentissage) = YEAR(pi_date);
    SET v_total = v_total + po_finished;
    
    -- To come in the current year after the date
    SELECT COUNT(id) INTO po_tocome
    FROM apprentissage
    WHERE date_debut_apprentissage > pi_date AND YEAR(date_debut_apprentissage) = YEAR(pi_date);
    SET v_total = v_total + po_tocome;
    
    -- Total for current year
    SET po_total = v_total;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure display_internship_stats_total
-- -----------------------------------------------------

DELIMITER $$
USE `db_rel_ent_pol_tours`$$
CREATE PROCEDURE `display_internship_stats_total` ( 
	OUT po_total INT, OUT po_france INT, OUT po_abroad INT)
BEGIN
	-- ------------------------------------------------------------------------------ 
	-- Displays the total number of internships in the database
	-- OUTPUT
	-- 		po_total [INT]	: total number of internships in the database
	-- 		po_france [INT] : total number of internships in France in the database
	-- 		po_abroad [INT]	: total number of internships abroad in the database
	-- ------------------------------------------------------------------------------ 

	-- total number of internships
	SELECT COUNT(id) INTO po_total
	FROM convention_stage;
    
    -- total number of internships in france
    SELECT COUNT(c.id) INTO po_france
    FROM convention_stage c, stage s
    WHERE c.id_stage = s.id AND s.etranger = 0;
    
    -- total number of internships abroad
    SELECT COUNT(c.id) INTO po_abroad
    FROM convention_stage c, stage s
    WHERE c.id_stage = s.id AND s.etranger = 1;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure display_internship_stats_current_year
-- -----------------------------------------------------

DELIMITER $$
USE `db_rel_ent_pol_tours`$$
CREATE PROCEDURE `display_internship_stats_current_year` (
	IN pi_date DATE, OUT po_total INT, 
    OUT po_total_finished INT, OUT po_france_finished INT, OUT po_abroad_finished INT,
    OUT po_total_ongoing INT, OUT po_france_ongoing INT, OUT po_abroad_ongoing INT,
    OUT po_total_tocome INT, OUT po_france_tocome INT, OUT po_abroad_tocome INT)
BEGIN
	-- ------------------------------------------------------------------------------ 
	-- Displays apprenticeship stats for the current year on a specified date
	-- INPUT
	-- 		pi_date [DATE] 		: current date, i.e. '2018-04-16'
	-- OUTPUTS
	-- 		po_total [INT] 			: number of internships related to the current year
	--
	-- 		po_total_ongoing [INT]	: number of ongoing internships related to the current year
	-- 		po_france_ongoing [INT]	: number of ongoing internships in France related to the current year
	-- 		po_abroad_ongoing [INT]	: number of ongoing internships abroad related to the current year
	-- 
	-- 		po_total_finished [INT]	: number of finished internships related to the current year
	-- 		po_france_finished [INT]: number of finished internships in France related to the current year
	-- 		po_abroad_finished [INT]: number of finished internships abroad related to the current year
	-- 
	-- 		po_total_tocome [INT]	: number of incoming internships related to the current year
	-- 		po_france_tocome [INT]	: number of incoming internships in France related to the current year
	-- 		po_abroad_tocome [INT]	: number of incoming internships abroad related to the current year
	-- ------------------------------------------------------------------------------ 

	DECLARE v_total_finished INT;
    DECLARE v_total_ongoing INT;
    DECLARE v_total_tocome INT;
    SET v_total_finished = 0; 
    SET v_total_ongoing = 0;
    SET v_total_tocome = 0;
    
	-- Number of finished internships in france
	SELECT COUNT(id) INTO po_france_finished
    FROM stage
    WHERE date_fin_stage < pi_date AND YEAR(date_fin_stage) = YEAR(pi_date)
		AND etranger = 0;
    SET v_total_finished = v_total_finished + po_france_finished;
    
    -- Number of finished internships abroad
	SELECT COUNT(id) INTO po_abroad_finished
    FROM stage
    WHERE date_fin_stage < pi_date AND YEAR(date_fin_stage) = YEAR(pi_date)
		AND etranger = 1;
    SET v_total_finished = v_total_finished + po_abroad_finished;

	-- Total number of finished internships
    SET po_total_finished = v_total_finished;
    
    
    -- Number of ongoing internships in france
    SELECT COUNT(id) INTO po_france_ongoing
    FROM stage
    WHERE pi_date BETWEEN date_debut_stage AND date_fin_stage
		AND etranger = 0;
    SET v_total_ongoing = v_total_ongoing + po_france_ongoing;
    
    -- Number of ongoing internships in abroad
    SELECT COUNT(id) INTO po_abroad_ongoing
    FROM stage
    WHERE pi_date BETWEEN date_debut_stage AND date_fin_stage
		AND etranger = 1;
    SET v_total_ongoing = v_total_ongoing + po_abroad_ongoing;
    
    -- Total number of ongoing internships
    SET po_total_ongoing = v_total_ongoing;
    
    
    -- To come in France in the current year after the date
    SELECT COUNT(id) INTO po_france_tocome
    FROM stage
    WHERE date_debut_stage > pi_date AND YEAR(date_debut_stage) = YEAR(pi_date)
		AND etranger = 0;
    SET v_total_tocome = v_total_tocome + po_france_tocome;
    
    -- To come abroad in the current year after the date
    SELECT COUNT(id) INTO po_abroad_tocome
    FROM stage
    WHERE date_debut_stage > pi_date AND YEAR(date_debut_stage) = YEAR(pi_date)
		AND etranger = 1;
    SET v_total_tocome = v_total_tocome + po_abroad_tocome;
    
    -- Total to come in the current year after the date
    SET po_total_tocome = v_total_tocome;
    
    

    -- Total number of internships this year
    SET po_total = v_total_finished + v_total_ongoing + v_total_tocome;    
END$$

DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
